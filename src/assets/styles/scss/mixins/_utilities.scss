@mixin underline-hover($height: 1px, $color: inherit) {
  position: relative;
  display: inline-block;

  &:before{
    content: '';
    position: absolute;
    height: 0;
    color: $color;
    border-bottom: $height solid;
    width: 0;
    bottom: 0;
    left: 50%;
    transition: all .3s linear;
    opacity: 1;
  }

  &:hover:before{
    width: 100%;
    left: 0;
    opacity: 1;
  }
}

@mixin double-underline-hover($height: 1px, $color: inherit, $padding-right: false) {
  position: relative;
  display: inline-block;

  &:before {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 0;
    color: $color;
    border-bottom: $height solid;
    opacity: 0.4;
    transition: width .5s;
  }

  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 0;
    color: $color;
    border-bottom: $height solid;
    transition: width .5s;
    transition-delay: .3s;
  }

  &:hover {

    &:before {
      width: 100%;
    }

    &:after {
      width: 100%;
    }
  }
}

@mixin underline-out($height, $color) {

  &:before {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    height: $height;
    width: 0;
    transition: width 0s ease, background .5s ease;
  }

  &:after {
    content: '';
    display: block;
    position: absolute;
    right: 0;
    bottom: 0;
    height: $height;
    width: 0;
    background: $color;
    transition: width .5s ease;
  }

  &:hover {

    &:before {
      width: 100%;
      background: $color;
      transition: width .5s ease;
    }

    &:after {
      width: 100%;
      background: transparent;
      transition: all 0s ease;
    }
  }
}

@mixin underline($height: 1px, $color: inherit) {
  position: relative;
  display: inline-block;

  &:after{
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    border-bottom: $height solid;
  }

  &:hover:after{
    animation: underline-slide .6s linear;
  }

  @keyframes underline-slide{
    0%{
      left: 0;
    }

    50%{
      left: 100%;
      right: 0;
    }

    51%{
      left: 0;
      right: 100%;
    }

    100%{
      right: 0;
    }
  }
}

@mixin hide-scroll{
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;

  &::-webkit-scrollbar{
    display: none;
  }
}

@mixin clearfix{
  *zoom: 1;

  &:before, &:after{
    content: '';
    display: table;
  }

  &:after{
    clear: both;
  }

}

@mixin ie-hack{
  //ie edge
  @supports (-ms-ime-align:auto){
    @content;
  }

  //ie 10+
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    content: '';
    display: block;
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .ratio-content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

@mixin absolute($shift: 0) {
	position: absolute;
	top: $shift;
	bottom: $shift;
	right: $shift;
	left: $shift;
	margin: auto;
}

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}


@function calc-top($line-height-base, $font-size, $component-height) {
  @return (($line-height-base * $font-size) - $component-height) / 2; // vertical center of line-height
}


@function contrast-color($color, $dark: $contrasted-dark-default, $light: $contrasted-light-default, $threshold: null) {
  @if $threshold {
    // Deprecated in Compass 0.13
    @warn "The $threshold argment to contrast-color is no longer needed and will be removed in the next release.";
  }

  @if $color == null {
    @return null;
  } @else {
    $color-brightness: brightness($color);
    $dark-text-brightness: brightness($dark);
    $light-text-brightness: brightness($light);
    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
  }
}

@function brightness($color) {
  @if type-of($color) == color {
    @return (red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114) / 255 * 100%;
  } @else {
    @return unquote("brightness(#{$color})");
  }
}

@mixin set-background-color($color){
  background-color: $color;
  @include set-sidebar-background($color);
  @include set-font-icon-color($color);
}

@mixin set-active-color($color){
  background-color: $color;
}

@mixin set-sidebar-background($color){
  $overlay-opacity: .9;
  @if $color == #000000 {
    $overlay-opacity: .8;
  }

  .sidebar-background{
    &:after{
      background: $color;
      opacity: $overlay-opacity;
    }
  }
}

@mixin set-gradient-background-color($start-color, $end-color){
  @include gradient-directional($start-color, $end-color);
  $overlay-opacity: .9;
  .sidebar-background{
    &:after{
      @include gradient-directional($start-color, $end-color);
      opacity: $overlay-opacity;
    }
  }
  @include set-font-icon-color($start-color);
}

@mixin set-font-icon-color($color){
  $sidebar-font-color : $white;
  @if $color == #ffffff {
    $sidebar-font-color: $black;
  }

  .navigation i, .navigation li > a{
    color: $sidebar-font-color;
  }

  .logo-text{
    color: $sidebar-font-color;
  }

  .sidebar-header a.nav-toggle{
    color: $sidebar-font-color;
  }

  .sidebar-header a.nav-close{
    color: $sidebar-font-color;
  }
}

@mixin set-anchor-color($color){
  .navigation{
    li{
      a{
        color: $color;
      }
    }
  }
}
@mixin set-logo-text-color($color){
  .logo-text{
    color: $color;
  }
  .sidebar-header a.nav-toggle{
    color: $color;
  }
}
